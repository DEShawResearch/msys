'''
Download lp_solve_5.5.2.5_source.tar.gz from here:

    https://sourceforge.net/projects/lpsolve/files/lpsolve/5.5.2.5/
    
Then unpack it in this directory using

    tar xzf lp_solve_5.5.2.5_source.tar.gz
'''

Import('env')
import os

srcs=Split('''
lp_solve_5.5/lp_MDO.c
lp_solve_5.5/shared/commonlib.c
lp_solve_5.5/shared/mmio.c
lp_solve_5.5/shared/myblas.c
lp_solve_5.5/ini.c
lp_solve_5.5/fortify.c
lp_solve_5.5/colamd/colamd.c
lp_solve_5.5/lp_rlp.c
lp_solve_5.5/lp_crash.c
lp_solve_5.5/bfp/bfp_LUSOL/lp_LUSOL.c
lp_solve_5.5/bfp/bfp_LUSOL/LUSOL/lusol.c
lp_solve_5.5/lp_Hash.c
lp_solve_5.5/lp_lib.c
lp_solve_5.5/lp_wlp.c
lp_solve_5.5/lp_matrix.c
lp_solve_5.5/lp_mipbb.c
lp_solve_5.5/lp_MPS.c
lp_solve_5.5/lp_params.c
lp_solve_5.5/lp_presolve.c
lp_solve_5.5/lp_price.c
lp_solve_5.5/lp_pricePSE.c
lp_solve_5.5/lp_report.c
lp_solve_5.5/lp_scale.c
lp_solve_5.5/lp_simplex.c
lp_solve_5.5/lp_SOS.c
lp_solve_5.5/lp_utils.c
lp_solve_5.5/yacc_read.c
''')

hdrs=Split('''
lp_solve_5.5/lp_Hash.h
lp_solve_5.5/lp_lib.h
lp_solve_5.5/lp_matrix.h
lp_solve_5.5/lp_mipbb.h
lp_solve_5.5/lp_SOS.h
lp_solve_5.5/lp_types.h
lp_solve_5.5/lp_utils.h
''')

if os.path.isdir('lp_solve_5.5'):
    lenv = env.Clone()
    lenv.AddLibrary('lpsolve55', srcs)
    lenv.Append(CPPPATH='lp_solve_5.5/bfp')
    lenv.Append(CPPPATH='lp_solve_5.5/bfp/bfp_LUSOL')
    lenv.Append(CPPPATH='lp_solve_5.5/bfp/bfp_LUSOL/LUSOL')
    lenv.Append(CPPPATH='lp_solve_5.5/shared')
    lenv.Append(CPPPATH='lp_solve_5.5/colamd')
    lenv.Append(CPPPATH='lp_solve_5.5')
    lenv.Append(CPPDEFINES=['DYY_NEVER_INTERACTIVE', 'PARSER_LP', 'INVERSE_ACTIVE=INVERSE_LUSOL', 'RoleIsExternalInvEngine'])
    lenv.Append(LIBS=['dl'])
    lenv.AddHeaders(hdrs, prefix='lp_solve', stage=True)


