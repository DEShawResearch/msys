#!/usr/bin/env desres-exec
#{
# desres-cleanenv $MSYS_CLEANENV -- python $0 "$@"
#}

import msys
from msys import neutralize

'''
dms-neutralize input.dms output.dms [ options ]

Add counterions to a structure in order to neutralize it.
'''

def main():
    import optparse
    parser = optparse.OptionParser(__doc__)

    parser.add_option('-p', '--cation', default='NA', 
            help='Species of cation.  Supported options are NA and K')
    parser.add_option('-n', '--anion', default='CL',
            help='Species of anion.  Supported option is CL')
    parser.add_option('-c', '--chain', default='ION',
            help='Chain name for counterions')
    parser.add_option('-C', '--counterchain', default='ION2',
            help='Chain name for counter-counterions')
    parser.add_option('-s', '--solute-pad', default=5.0, type='float',
            help='minimum distance between placed ions and solute')
    parser.add_option('-i', '--ion-pad', default=3.0, type='float',
            help='minimum distance between placed ions')
    parser.add_option('-m', '--concentration', default=0.0, type='float',
            help='molar concentration of counter-counterions')
    parser.add_option('-v', '--verbose', default=False, action='store_true')


    opts, args = parser.parse_args()
    if len(args)!=2:
        parser.error("incorrect number of arguments")

    ifile, ofile = args
    if opts.verbose:
        print "Loading input file <%s>" % ifile
    mol=msys.LoadDMS(ifile, structure_only=True)
    neutralize.Neutralize(mol, **opts.__dict__)
    if opts.verbose:
        print "Writing MDS file <%s>" % ofile
    msys.SaveDMS(mol, ofile)

if __name__=="__main__": main()

# vim: filetype=python
