#!/usr/bin/garden-exec
#{
# garden env-keep-only
# . `dirname $0`/../share/env.sh
# exec python $0 "$@"
#}

'''
dms-scale-vdw input.dms output.dms [ options ]

*dms-scale-vdw* scales the vdw interactions between multiple groups of atoms.
The vdw interactions between each ligand group will be scaled by the
specified amount.  As many ligands may be specified as desired, though
different implementations on Desmond and Anton may in practice limit the
number possible

Currently, the vdw functional form of the DMS file must be "vdw_12_6".  

This tool uses the `nonbonded_combined_param` table in the DMS file to store
the overrides and therefore should not be used with versions of Anton
software older than 2.9.2  

'''

import sys, os

import msys
from msys import vdw

def main():
    import optparse
    parser = optparse.OptionParser(__doc__)

    parser.add_option('-s', '--scale-sigma', 
            help='scale factor for sigma')
    parser.add_option('-e', '--scale-epsilon',
            help='scale factor for epsilon')
    parser.add_option('-l', '--ligand', action='append', default=[],
            help='atom selection for a ligand')

    opts, args = parser.parse_args()
    if len(args)!=2:
        parser.error("incorrect number of arguments")

    n=len(opts.ligand)
    if n<2:
        parser.error("need at least 2 ligand selections")

    if opts.scale_sigma is None: parser.error("--scale-sigma is required")
    if opts.scale_epsilon is None: parser.error("--scale-epsilon is required")
    sig = float(opts.scale_sigma)
    eps = float(opts.scale_epsilon)

    print "Sigma scale:   %f" % sig
    print "Epsilon scale: %f" % eps

    ifile, ofile = args
    print "Loading DMS file <%s>" % ifile
    mol=msys.LoadDMS(ifile)

    for i in range(0,n):
        s1 = mol.select(opts.ligand[i])
        name = '1st' if i==0 else '2nd' if i==1 else '3rd' if i==2 else '%sth' % (i+1)

        if not s1:
            print "ERROR: No atoms in the %s selection: %s" % (
                    name, opts.ligand[i])
            exit(1)
        else:
            print "Selected %d atoms with %s selection" % (len(s1), name)
        for j in range(i+1,n):
            s2 = mol.select(opts.ligand[j])
            vdw.Scale(mol, s1, s2, sig, eps)

    mol.coalesceTables()
    mol = mol.clone()
    print "Writing DMS file <%s>" % ofile
    msys.SaveDMS(mol, ofile)
    print "OK"

if __name__=="__main__": main()

# vim: filetype=python
