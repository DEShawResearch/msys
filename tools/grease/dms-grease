#!/usr/bin/env desres-exec
# -*- python -*-
#{
# desres-cleanenv $MSYS_CLEANENV -- python $0 "$@"
#}

'''
dms-grease input.dms lipid.dms output.dms [ options ]

Tile a lipid bilayer around a solute.
'''

import os, sys
import msys
from msys import grease

def main():
    import optparse
    parser = optparse.OptionParser(__doc__)

    parser.add_option('-t', '--thickness', default=0.0, type='float',
        help='Minimum distance from edge of membrane to input structure')
    parser.add_option('-x', '--xsize', default=None,
        help='Size of membrane along x dimension')
    parser.add_option('-y', '--ysize', default=None,
        help='Size of membrane along y dimension')
    parser.add_option('-c', '--chain', default='LIP',
        help='Chain name of constructed lipids')
    parser.add_option(      '--chain2', default=None,
        help='Chain name of lower leaflet')
    parser.add_option(      '--square', default=False, action='store_true',
        help='Ensure the resulting membrane is square')
    parser.add_option('--structure-only', default=False, action='store_true',
        help='Ignore forcefield in input.dms and lipid.dms')
    parser.add_option('-v', '--verbose', default=False, action='store_true')

    opts, args = parser.parse_args()
    if len(args)!=3:
        parser.error("incorrect number of arguments")

    input, lipid, output = args
    structure_only = opts.structure_only
    del opts.__dict__['structure_only']

    if opts.verbose: print "Loading input file <%s>" % input
    if input=='-':
        mol=msys.CreateSystem()
    else:
        mol=msys.LoadDMS(input, structure_only=structure_only)

    tile=msys.LoadDMS(lipid, structure_only=structure_only)
    
    mol = grease.Grease(mol, tile, **opts.__dict__)

    if opts.verbose: print "Writing DMS file <%s>" % output
    msys.SaveDMS(mol,output)

if __name__=="__main__": main()

# vim: filetype=python
