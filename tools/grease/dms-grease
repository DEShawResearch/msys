#!/usr/bin/env desres-exec
# -*- python -*-
#{
# source `dirname $0`/../share/MODULES && \
# exec desres-cleanenv -m $PYTHON/bin \
# -- python $0 "$@" 
#}

'''
dms-grease input.dms lipid.dms output.dms [ options ]

Tile a lipid bilayer around a solute.

dms-grease builds a new chemical system consisting of the input system
plus a lipid bilayer constructed by tiling *lipid.dms* in the x-y plane.
If the *input.dms* is given as "-", then a pure membrane will be built.

An error will be encountered if only one of *input.dms* and *lipid.dms* 
have forcefield information; this is because Msys refuses to write DMS
files that have only partial information for the nonbonded atom types.
If you don't have forcefield information for one of the input files,
use the *--structure-only* option to ignore the forcefield information
in the one that does.

The global cell of the new system will be orthorhombic and have x and
y dimensions given by the specified size of the membrane, and z dimension
given by the input structure or the lipid membrane template, whichever is
greater.
'''

import sys, os
sys.path.insert(0,os.path.join(os.path.dirname(__file__),'..','lib','python'))

import msys
from msys import grease

def main():
    import optparse
    parser = optparse.OptionParser(__doc__)

    parser.add_option('-t', '--thickness', default=0.0, type='float',
        help='Minimum distance from edge of membrane to input structure')
    parser.add_option('-x', '--xsize', default=None,
        help='Size of membrane along x dimension')
    parser.add_option('-y', '--ysize', default=None,
        help='Size of membrane along y dimension')
    parser.add_option(      '--square', default=False, action='store_true',
        help='Ensure the resulting membrane is square')
    parser.add_option('--structure-only', default=False, action='store_true',
        help='Ignore forcefield in input.dms and lipid.dms')
    parser.add_option('-v', '--verbose', default=True, action='store_true',
        help="Be chatty")

    opts, args = parser.parse_args()
    if len(args)!=3:
        parser.error("incorrect number of arguments")

    input, lipid, output = args
    structure_only = opts.structure_only
    del opts.__dict__['structure_only']

    if opts.verbose: print "Loading input file <%s>" % input
    if input=='-':
        mol=msys.CreateSystem()
    else:
        mol=msys.LoadDMS(input, structure_only=structure_only)

    tile=msys.LoadDMS(lipid, structure_only=structure_only)
    
    mol = grease.Grease(mol, tile, **opts.__dict__)

    if opts.verbose: print "Writing DMS file <%s>" % output
    msys.SaveDMS(mol,output)

if __name__=="__main__": main()

# vim: filetype=python
