#!/usr/bin/env desres-exec
# -*- python -*-
#{
# desres-cleanenv -m numpy/1.6.2-31A/lib-python -- python $0 "$@"
#}

'''
dms-select input_file [-s | --selection seltext] [-o | --output dstfile]
                                                 [-a | --append dstfile]

Write or append a selection from input_file to an output dms file.

The input file can be any file type supported by msys.Load.
'''

import sys, os
sys.path.insert(0,os.path.join(os.path.dirname(__file__),'..','lib','python'))
import msys

def main():
    import optparse
    parser = optparse.OptionParser(__doc__)

    parser.add_option('-s', '--selection', default=None)
    parser.add_option('-a', '--append', default=None)
    parser.add_option('-o', '--output', default=None)
    parser.add_option('-v', '--verbose', action='store_true', default=False)

    opts, args = parser.parse_args()
    if len(args)!=1:
        parser.error("incorrect number of arguments")

    if opts.output and opts.append:
        raise ValueError, "Cannot specify both --append and --output"

    mol=msys.Load(args[0])
    if opts.selection:
        mol=mol.clone(opts.selection)


    if opts.verbose:
        print "dms-select: %d chain(s), %d residue(s), %d atom(s)" % (
                len(mol.chains), len(mol.residues), len(mol.atoms))

    if opts.output:
        msys.SaveDMS(mol, opts.output)

    elif opts.append:
        old=msys.LoadDMS(opts.append)
        old.append(mol)
        msys.SaveDMS(old, opts.append)

    return 0

if __name__=="__main__": exit(main())

# vim: filetype=python
