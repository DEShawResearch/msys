#!/usr/bin/env desres-exec
#{
# source `dirname $0`/../share/MODULES && \
# exec desres-cleanenv -m $PYTHON/bin \
# -- python $0 "$@" 
#}

'''
dms-reorder-atoms reference target output [--refsel all] [--targetsel all]

Reorder atoms in each residue in target to match topologically the atoms in 
reference.  All topologically invariant permutations within each residue
will be considered.  

Use refsel and targetsel to consider only selected residues.

The order of selected residues in reference is assumed to match the order
in target.
'''

import sys, os
sys.path.insert(0,os.path.join(os.path.dirname(__file__),'..','lib','python'))

import msys
from msys import reorder
import numpy as NP

def main():
    import optparse
    parser = optparse.OptionParser(__doc__)
    parser.add_option('--refsel', default='all', 
            help='selected atoms in reference structure')
    parser.add_option('--targetsel', default='all', 
            help='selected atoms in target structure')

    opts, args = parser.parse_args()
    if len(args)!=3:
        parser.error("incorrect number of arguments")

    rfile, ifile, ofile = args
    
    ref = msys.Load(rfile)
    tgt = msys.Load(ifile)
    out = reorder.Reorder(ref, tgt, **opts.__dict__)
    msys.SaveDMS(out, ofile)

if __name__=="__main__": main()

# vim: filetype=python
