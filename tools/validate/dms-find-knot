#!/usr/bin/env desres-exec
# -*- python -*-
#{
# desres-cleanenv -m numpy/1.6.2-33A/lib-python \
# -- python $0 "$@"
#}

'''
dms-find-knot system.dms [ options ]

*dms-find-knot* searches for bonds which pass through a ring of atoms; e.g.,
a lipid tail passing through an aromatic ring in a protein.  Such geometries
can accidentally arise during system construction and usually indicate
a badly constructed system which will behave badly during simulation.

'''

import sys, os
sys.path.insert(0,os.path.join(os.path.dirname(__file__),'..','lib','python'))

import msys
from msys import knot
from optparse import OptionParser
import cProfile as profile

if __name__ == "__main__":
    knot.ut_intersection()
    
    parser = OptionParser("Usage: dms_find_knot [options] system.dms.\n\nGiven a dms file, find any instances where a bond is 'threaded' through a ring.")

    parser.add_option("--max-cycle", help="Maximum cycle size to check (if this is set too large, disulfide-bond-induced rings will be checked).")

    parser.add_option("-s", "--selection", help="Limit knot search to selection")

    (o,a) = parser.parse_args(sys.argv)
    if len(a)!=2:
        parser.error("Incorrect number of arguments")
 
    mol=msys.Load(a[1], structure_only=True)
    klist = knot.FindKnots(
            mol,
            max_cycle_size=o.max_cycle,
            selection=o.selection,
            verbose=True)

    sys.exit(len(klist)!=0)

# vim: filetype=python
