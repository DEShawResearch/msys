#!/usr/bin/env desres-exec
# -*- python -*-
#{
# desres-cleanenv $MSYS_CLEANENV -- python $0 "$@"
#}

'''
dms-solvate watbox.dms [ options ]  -- create water box
dms-solvate solute.dms solvate.dms [ options ] -- add water to solute
dms-solvate solute.dms watbox.dms solvate.dms [ options ] -- specify water box

Generate water molecules around a structure.  

With one argument, a system containing only water is created.  

With two arguments, a generic water box with no forcefield parameters
is built around the input system.  The output system will have no forcefield.

With three argments, the provided water box is tiled around the input
structure, preserving forcefield information from solute and water.

'''

import os, sys
import msys
from msys import solvate

def main():
    import optparse
    parser = optparse.OptionParser(__doc__)

    parser.add_option('-d', '--dims', default=None,
        help='water box dimensions: 1 or 3 comma-separated values')
    parser.add_option('-c', '--center', default=None,
        help='center of box as 3 comma-separated values; default 0,0,0')
    parser.add_option('-n', '--chain', default='WT',
        help='Chain name of constructed water box')
    parser.add_option('-v', '--verbose', default=False, action='store_true')

    opts, args = parser.parse_args()
    watbox = None

    if len(args)==1:
        mol=msys.CreateSystem()
        output=args[0]
    elif len(args)==2:
        input, output = args
        if opts.verbose: print "Loading input file <%s>" % input
        mol=msys.LoadDMS(input, structure_only=True)
    elif len(args)==3:
        input, watbox, output = args
        if opts.verbose: print "Loading input file <%s>" % input
        mol=msys.LoadDMS(input, structure_only=False)
    else:
        parser.error("incorrect number of arguments")

    if opts.dims is not None:
        opts.dims = map(float, opts.dims.split(','))
    if opts.center is not None:
        opts.center = map(float, opts.center.split(','))

    mol = solvate.Solvate(mol, watbox, **opts.__dict__)

    if opts.verbose: print "Writing DMS file <%s>" % output
    msys.SaveDMS(mol,output)

if __name__=="__main__": main()

# vim: filetype=python
